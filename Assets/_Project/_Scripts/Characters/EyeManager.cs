using System.Collections;using System.Collections.Generic;using BehaviorDesigner.Runtime;using DG.Tweening;using Unity.Mathematics;using UnityEngine;using UnityEngine.Serialization;using Random = UnityEngine.Random;public class EyeManager : MonoBehaviour{    [SerializeField] public MonsterState CurrentState { get; private set; }    [SerializeField] private Transform _pupil;    [SerializeField] private Transform _eyeBall;    [SerializeField] private SpriteRenderer eyeRenderer;    [SerializeField] private SpriteRenderer pupilRenderer;    //time can be edited in-engine    [SerializeField] private float timer = 3f;    private int blinkProcess = 0;    private bool isBlinking = false;    private EnemyMonster _enemyMonster;    private MonsterSO _monsterStats;    private GameManager gameManager;    private void Awake()    {        _enemyMonster = GetComponent<EnemyMonster>();        _monsterStats = _enemyMonster.GetMonsterStats();    }    void Start()    {        gameManager = GameObject.FindFirstObjectByType<GameManager>();    }        void Update()    {                BlinkTimer();        if (_enemyMonster.CurrentState != MonsterState.Chasing && isBlinking)        {            EyeBlink();        }           }    #region blink    void BlinkTimer()    {        timer-=Time.deltaTime;        //when the timer expires, go to Blinking (Blinking then goes to Tracking)        if(timer > 0){            return;        }        isBlinking = true;        timer = Random.Range(3f, 8f);    }    //blinking process    void EyeBlink()    {        if(blinkProcess == 0)        {            //If you really think about it, blinking is just getting smaller in one direction            _eyeBall.localScale = new Vector3(_eyeBall.localScale.x, _eyeBall.localScale.y + (Vector3.down * _monsterStats.EyeBallShutSpeed).y, _eyeBall.localScale.z);            //It's true--your pupils descend when you blink            //_pupil.position += Vector3.down * _monsterStats.PupilDropSpeed;            if(_eyeBall.localScale.y <= 0)            {                blinkProcess++;                if(eyeRenderer.sprite != _monsterStats.SpriteBall){                    eyeRenderer.sprite = _monsterStats.SpriteBall;                    pupilRenderer.enabled = true;                }            }        }        else if(blinkProcess == 1)        {            //If you really think about it, blinking is just getting bigger in one direction            _eyeBall.localScale = new Vector3(_eyeBall.localScale.x, _eyeBall.localScale.y + (Vector3.up * _monsterStats.EyeBallShutSpeed).y, _eyeBall.localScale.z);            //_pupil.position += Vector3.up * _monsterStats.PupilDropSpeed;            if(_eyeBall.localScale.y == 1)            {                blinkProcess++;            }        }        else        {            //if not tracking player, then move ir forward so it looks like is looking at the direction of the movemnet                _pupil.localPosition = Vector3.up * 0.75f;                CurrentState = MonsterState.Default;            blinkProcess = 0;            isBlinking = false;        }    }    #endregion        //corresponding changes in the eye from new state    public void OnUpdateMonsterState()    {        //stuff that always happens when changing states        blinkProcess = 0;        _eyeBall.localScale = Vector3.one;                switch (_enemyMonster.CurrentState)        {            case MonsterState.Chasing:                //change sprite                eyeRenderer.sprite = _monsterStats.SpriteMaw;                //only maw visible                pupilRenderer.enabled = false;                //reset position just in case                _pupil.localPosition = Vector3.zero;                break;            case MonsterState.Follow:                //make pupil visible again                eyeRenderer.sprite = _monsterStats.SpriteBall;                pupilRenderer.enabled = true;                break;            case MonsterState.Frustrated:                eyeRenderer.sprite = _monsterStats.SpriteBall;                pupilRenderer.enabled = true;                                break;            case MonsterState.Default:                //return pupil size                _pupil.localPosition = Vector3.up * 0.75f;                _pupil.localRotation = quaternion.identity;                //make pupil visible again                eyeRenderer.sprite = _monsterStats.SpriteBall;                pupilRenderer.enabled = true;                break;                    }    }}